@mixin shadow {
  box-shadow: 2px 5px 1rem rgba(0, 0, 0, .15);

  &:hover,
  &:active,
  &:focus {
    box-shadow: 2px 5px 1rem rgba(0, 0, 0, .3);
  }
}


@mixin btn-animation( $start-color, $end-color, $transition-time ){
  border-radius: calc($border-radius * 2);
  background-size: 100%;
  background-image: linear-gradient($start-color, $end-color);
  position: relative;
  z-index: 100;
  &:before {
    border-radius: calc($border-radius * 2);
    background-image: linear-gradient(lighten($start-color, 5), lighten($end-color, 5));
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    z-index: -100;
    transition: opacity $transition-time;
  }
  &:hover,
  &:active,
  &:focus {
    &:before {
      opacity: 1;
    }
  }
}

@mixin heart {
  font-size: 1.8rem;
  width: 1.8rem;
  height: 1.8rem;
  color: lighten(map-get($ohmyfood-theme, dark-gray), 30%);
  position: relative;

  i {
    position: absolute;
  }
}

@mixin is($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
